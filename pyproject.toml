[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "discord-observer-orchestrator"
version = "0.1.0"
description = "Discord Observer/Orchestrator bot with AI-powered message classification and automated responses"
authors = [
    {name = "Jack", email = "jack@latrobeconsulting.com"}
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.11"
keywords = ["discord", "bot", "ai", "llm", "automation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers", 
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # Discord integration
    "discord.py>=2.3.0,<3.0.0",
    
    # OpenAI integration
    "openai>=1.0.0,<2.0.0",
    
    # LangChain and LangGraph for ReAct agent orchestrator
    "langgraph>=0.2.0,<1.0.0",
    "langchain>=0.2.14,<0.4.0", 
    "langchain-openai>=0.1.22,<0.3.0",
    "langchain-core>=0.2.0,<0.4.0",
    
    # Web framework for admin API
    "fastapi>=0.104.0,<1.0.0",
    "uvicorn[standard]>=0.24.0,<1.0.0",
    
    # Database and ORM
    "sqlalchemy>=2.0.0,<3.0.0",
    "alembic>=1.12.0,<2.0.0",
    
    # Data validation and serialization
    "pydantic>=2.4.0,<3.0.0",
    
    # Async support
    "aiofiles>=23.2.1,<24.0.0",
    "aiohttp>=3.9.0,<4.0.0",
    
    # Configuration management
    "python-dotenv>=1.0.0,<2.0.0",
    "pydantic-settings>=2.0.0,<3.0.0",
    
    # Logging and monitoring
    "structlog>=23.2.0,<24.0.0",
    "prometheus-client>=0.19.0,<1.0.0",
    
    # Utilities
    "python-dateutil>=2.8.2,<3.0.0",
    "tenacity>=8.2.0,<9.0.0",  # Retry logic
]

[project.optional-dependencies]
dev = [
    # Development tools
    "black>=23.10.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.6.0",
    "pre-commit>=3.5.0",
    
    # Testing (not used in pilot per PRD but good to have)
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",  # For testing FastAPI
    
    # Documentation
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=1.3.0",
]

[project.scripts]
discord-bot = "app.main:main"

[project.urls]
Homepage = "https://github.com/latrobe/discord-observer-orchestrator"
Documentation = "https://github.com/latrobe/discord-observer-orchestrator/docs"
Repository = "https://github.com/latrobe/discord-observer-orchestrator"
Issues = "https://github.com/latrobe/discord-observer-orchestrator/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["app*"]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
known_first_party = ["app"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "discord.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "-ra",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]